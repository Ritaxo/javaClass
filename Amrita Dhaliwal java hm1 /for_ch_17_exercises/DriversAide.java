package for_ch_17_exercises;import java.awt.*; // for AWT components and containersimport java.awt.event.*; // for event handlingimport javax.swing.*; // for Swing components and containers/** * Java Program to implement Sample Problem 3.1, the Driver's Aide Program. * Gives the appropriate action corresponding to the color of a traffic signal. *  * @author Amrita Dhaliwal */public class DriversAide extends JFrame {	/**	 * labels the JButtons that represent the possible colors for traffic signals	 */	private JLabel signalL;  	/**	 * labels the text field where appropriate action is displayed	 */	private JLabel actionL; 	/**	 *  User clicks this button to simulate a red light.	 */	private JButton redB; 	/**	 * User clicks this button to simulate a yellow light.	 */	private JButton yellowB; 	/**	 *  uUser clicks this button to simulate a green light.	 */		private JButton greenB; 	/**	 * where the action message is displayed	 */	private JTextField instructionsTF; 	/**	 * This variable holds a reference to the content pane so that 	 * getContentPane() needs to be called only once.	 */	private Container myCP; // to hold a reference to the content pane of the JFrame	/**	 * This is the constructor of this application.	 */	public DriversAide() { // Constructor for class DriversAide		super("Driver's Aide");		myCP = getContentPane(); 		myCP.setLayout(new FlowLayout()); 		setSize(325,100); 		setLocation(100,100); 		signalL = new JLabel("Signal"); 		myCP.add(signalL);				redB = new JButton("Red"); 		// Command the button redB to set its foreground color to red.		redB.setForeground(Color.red); 		redB.addActionListener((ActionEvent e) ->instructionsTF.setText("Stop!")); 		myCP.add(redB); 		yellowB = new JButton("Yellow"); 		yellowB.setForeground(Color.yellow); 		yellowB.addActionListener((ActionEvent e) ->instructionsTF.setText("Slow down...")); 		myCP.add(yellowB); 		greenB = new JButton("Green"); 		greenB.setForeground(Color.green); 		greenB.addActionListener((ActionEvent e) ->instructionsTF.setText("Go!"));		myCP.add(greenB); 		actionL = new JLabel("Action!"); 		myCP.add(actionL); 		// Construct a JTextField 8 characters wide where message will be displayed		instructionsTF = new JTextField (8);		instructionsTF.setEditable(false); 		myCP.add(instructionsTF);		setVisible(true);		addWindowListener(new WindowAdapter() {			public void windowClosing(WindowEvent e) {				System.exit(0);			}//windowClosing		}); //end of definition of WindowAdapter and semicolon to end the line 	}// close constructor for class DriversAide	/**	 * ActionListener for the red JButton	 */	//	public class RedBHandler implements ActionListener {	//		/**	//		 * action to be performed when the red button is clicked	//		 */	//		public void actionPerformed(ActionEvent e) {	//			instructionsTF.setText("Stop!");	//		}// actionPerformed	//	}// RedBHandler	/**	 * ActionListener for the yellow JButton	 */	//	public class YellowBHandler implements ActionListener {	//		/**	//		 * action to be performed when the yellow button is clicked	//		 */	//		public void actionPerformed(ActionEvent e) {	//			instructionsTF.setText("Slow down...");	//		}// actionPerformed	//	}// YellowBHandler	/**	 * ActionListener for the green JButton	 */	//	public class GreenBHandler implements ActionListener {	//		/**	//		 * action to be performed when the green button is clicked	//		 */	//		public void actionPerformed(ActionEvent e) {	//			instructionsTF.setText("Go!");	//		}// actionPerformed	//	}// GreenBHandler	/**	 * The main method is where execution begins.	 * @param args parameter is not used since we are not	 * working at the command line	 */	public static void main(String[] args) {		DriversAide myAppF = new DriversAide();	}// main }// class DriversAide